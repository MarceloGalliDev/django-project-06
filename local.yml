version: "3.9"

services:
  es:
    image: elasticsearch:8.12.0
    container_name: es
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
    networks:
      - authors-api
  api:
    build:
      context: .
      dockerfile: ./docker/local/django/Dockerfile
    volumes:
      # esse .:/ significa que vamos pegar todos os arquivos e dados e enviar para /app:z
      - .:/app:z
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
      # - /home/app/.venv # volume anonimo
    # nginxx
    expose:
      - "8000"
      - "5678"
    # localhost
    # ports:
    #   - "8000:8000"
    #   - "5678:5678"
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    depends_on:
      - postgres
      - mailhog
      - redis
      - es
    command: /start
    networks:
      - authors-api

  postgres:
    build:
      context: .
      dockerfile: ./docker/local/postgres/Dockerfile
    # volume para salvar os dados
    # cria pasta e aponta para :var/lib/postgresql/data
    volumes:
      - local_postgres_data:/var/lib/postgresql/data
      - local_postgres_data_backups:/backups
    env_file:
      - ./.envs/.local/.postgres
    networks:
      - authors-api
  
  mailhog:
    image: jcalonso/mailhog:v1.0.1
    container_name: mailhog
    ports:
      - "8025:8025"
    networks:
      - authors-api

  redis:
    image: redis:7.2.3-alpine
    networks:
      - authors-api
  
  celery_worker:
    build:
      context: .
      dockerfile: ./docker/local/django/Dockerfile
    command: /start-celeryworker
    volumes:
      - .:/app
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    depends_on:
      - redis
      - postgres
      - mailhog
    networks:
      - authors-api
  
  flower:
    build:
      context: .
      dockerfile: ./docker/local/django/Dockerfile
    command: /start-flower
    volumes:
      - flower_data:/data
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    ports:
      - "5555:5555"
    depends_on:
      - redis
      - postgres
    networks:
      - authors-api

  nginx:
    restart: always
    depends_on:
      - api
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/mediafiles
    build:
      context: ./docker/local/nginx
      dockerfile: Dockerfile
    # mapping port docker port to data
    ports:
      - "8080:80"
    networks:
      - authors-api

networks:
  authors-api:
    driver: bridge

volumes:
  static_volume:
  media_volume:
  local_postgres_data: {}
  local_postgres_data_backups: {}
  flower_data: {}